@use './color';
@use 'math';

@mixin fit($spacing: 0) {
  // Layout
  position: absolute;
  inset: $spacing;
}

@mixin desktop {
  @media (width > 40rem) {
    @content;
  }
}

@mixin mobile {
  @media (width <= 40rem) {
    @content;
  }
}

/* Border styling */

@function border($color, $width: 1) {
  @return ($width * 1px) solid $color;
}

@function border-inline-gradient($color, $direction) {
  @return linear-gradient(
    to $direction,
    transparent 15%,
    $color 40% 60%,
    transparent 85%
  );
}

@function border-block-gradient($color, $direction) {
  $start: 0.38rem;
  $end: $start + 1rem;

  @return linear-gradient(
    to $direction,
    transparent $start,
    $color $end calc(100% - $end),
    transparent calc(100% - $start)
  );
}

@function border-mobile-gradient($color) {
  @return linear-gradient(
    to right,
    transparent 0,
    $color 5% 60%,
    transparent 85%
  );
}

@mixin border-inline($left: 0, $right: 0) {
  // Box
  border: none;

  @include color.theme-color(color.$border-key) using ($color) {
    @if $left > 0 {
      border-left: border($color);
    }

    @if $right > 0 {
      border-right: border($color);
    }

    $width: 0 ($right * 1px) 0 ($left * 1px);
    border-image: border-inline-gradient($color, top) 1 / $width;
  }
}

@mixin border-block($top: 0, $bottom: 0, $is-mobile: false) {
  // Box
  border: none;

  @include color.theme-color(color.$border-key) using ($color) {
    @if $top > 0 {
      border-top: border($color);
    }

    @if $bottom > 0 {
      border-bottom: border($color);
    }

    $gradient: if(
      $is-mobile,
      border-mobile-gradient($color),
      border-block-gradient($color, right)
    );
    $width: ($top * 1px) 0 ($bottom * 1px) 0;
    border-image: $gradient 1 / $width;
  }
}

/* Section styling */

$header-title-height: 4rem;
$-section-width: 75rem;
$-border-width: 4rem;
$-transition: min(5%, $-border-width);
$section-margin: max(0px, (100% - $-section-width - 2 * $-border-width) / 2);
$section-padding: calc(
  1rem + clamp(0px, (100% - $-section-width) / 2, $-border-width)
);

@function -section-border($color, $width) {
  @return linear-gradient(
      to right,
      transparent,
      $color $-transition calc(100% - $-transition),
      transparent
    )
    1 / $width;
}

@mixin section-border-top {
  // Box
  margin-block-start: 1rem;

  @include color.theme-color(color.$border-key) using ($color) {
    border-top: border($color);
    border-image: -section-border($color, 1px 0 0 0);
  }
}

@mixin section-border-bottom {
  // Box
  margin-block-end: 1rem;

  @include color.theme-color(color.$border-key) using ($color) {
    border-bottom: border($color);
    border-image: -section-border($color, 0 0 1px 0);
  }
}

$-shadow-height: 1rem;
$-shadow-transparency: 0.38;

@mixin section-shadow-bottom {
  @include color.theme-color(color.$border-key) using ($color) {
    $-shadow-color: rgba($color, $-shadow-transparency);
    box-shadow:
      0 1rem $-shadow-height -1rem $-shadow-color,
      0 2rem $-shadow-height -2rem $-shadow-color;
  }
}

@mixin nav-dropdown-shadow {
  @include color.theme-color(color.$border-key) using ($color) {
    $-shadow-color: rgba($color, $-shadow-transparency);
    box-shadow:
      0 0 1rem $-shadow-color,
      0 1rem 1rem -1rem $-shadow-color;
  }
}

$scroll-padding: $header-title-height + $-shadow-height;
