@use 'color';
@use 'math';

@mixin fit($spacing: 0) {
  position: absolute;
  inset: $spacing;
}

@mixin mobile {
  @media (width <= 40rem) {
    @content;
  }
}

/* Border styling */

@function border($width: 1, $color: color.$border) {
  @return ($width * 1px) solid $color;
}

@function _border-gradient($direction, $width) {
  /* prettier-ignore */
  @return linear-gradient(
      to $direction,
      transparent 15%,
      color.$border 40% 60%,
      transparent 85%
    )
    1 / $width;
}

@mixin border-inline($left: 0, $right: 0) {
  border: none;
  @if ($left > 0) {
    border-left: border();
  }
  @if ($right > 0) {
    border-right: border();
  }
  border-image: _border-gradient(top, 0 ($right * 1px) 0 ($left * 1px));
}

@mixin border-block($top: 0, $bottom: 0) {
  border: none;
  @if ($top > 0) {
    border-top: border();
  }
  @if ($bottom > 0) {
    border-bottom: border();
  }
  border-image: _border-gradient(right, ($top * 1px) 0 ($bottom * 1px) 0);
}

/* Section styling */

$_section-width: 75rem;
$_border-width: $_section-width + 2 * 4rem;
$_border-overflow: max(0px, (100% - $_border-width) / 2);

$section-padding: calc(1rem + max(0px, (100% - $_section-width) / 2));

@function _section-border($width) {
  @return linear-gradient(
      to right,
      transparent $_border-overflow,
      color.$border calc(5% + $_border-overflow) calc(95% - $_border-overflow),
      transparent calc(100% - $_border-overflow)
    )
    1 / $width;
}

@mixin section-border-top {
  margin-block-start: 1rem;
  border-top: border();
  border-image: _section-border(1px 0 0 0);
}

@mixin section-border-bottom {
  margin-block-end: 1rem;
  border-bottom: border();
  border-image: _section-border(0 0 1px 0);
}
