@use 'color';
@use 'math';

@mixin fit($spacing: 0) {
  position: absolute;
  inset: $spacing;
}

@mixin desktop {
  @media (width > 40rem) {
    @content;
  }
}

@mixin mobile {
  @media (width <= 40rem) {
    @content;
  }
}

/* Border styling */

@function border($width: 1, $color: color.$border) {
  @return ($width * 1px) solid $color;
}

@function border-gradient($direction) {
  @return linear-gradient(to $direction, transparent 15%, color.$border 40% 60%, transparent 85%);
}

$border-mobile-gradient: linear-gradient(to right, color.$border 60%, transparent 85%);

@mixin border-inline($left: 0, $right: 0) {
  border: none;

  @if $left > 0 {
    border-left: border();
  }

  @if $right > 0 {
    border-right: border();
  }

  $width: 0 ($right * 1px) 0 ($left * 1px);
  border-image: border-gradient(top) 1 / $width;
}

@mixin border-block($top: 0, $bottom: 0, $gradient: border-gradient(right)) {
  border: none;

  @if $top > 0 {
    border-top: border();
  }

  @if $bottom > 0 {
    border-bottom: border();
  }

  $width: ($top * 1px) 0 ($bottom * 1px) 0;
  border-image: $gradient 1 / $width;
}

/* Section styling */

$-section-width: 75rem;
$-border-width: $-section-width + 2 * 4rem;
$-border-overflow: max(0px, (100% - $-border-width) / 2);
$section-padding: calc(1rem + max(0px, (100% - $-section-width) / 2));

@function -section-border($width) {
  @return linear-gradient(
      to right,
      transparent $-border-overflow,
      color.$border calc(5% + $-border-overflow) calc(95% - $-border-overflow),
      transparent calc(100% - $-border-overflow)
    )
    1 / $width;
}

@mixin section-border-top {
  margin-block-start: 1rem;
  border-top: border();
  border-image: -section-border(1px 0 0 0);
}

@mixin section-border-bottom {
  margin-block-end: 1rem;
  border-bottom: border();
  border-image: -section-border(0 0 1px 0);
}
